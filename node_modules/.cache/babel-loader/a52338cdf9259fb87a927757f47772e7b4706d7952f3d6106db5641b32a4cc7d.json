{"ast":null,"code":"var _jsxFileName = \"/Users/vishalmeghwal/my-first-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojiDictionary = {\n  \"üôÇ\": \"Acha\",\n  \"üòç\": \"wow\",\n  \"ü§≠\": \"hehehe\",\n  \"üòè\": \"Achaaaw\"\n};\nfunction App() {\n  _s();\n  const [meaning, setMeaning] = useState(\"\");\n  function emojiChangeHandler(event) {\n    var meaning = emojiDictionary[event.target.value];\n    if (meaning === undefined) {\n      meaning = \"We don't have this in the database\";\n    }\n    setMeaning(meaning);\n  }\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emoji interpreter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: emojiChangeHandler,\n      placeholder: \"Enter an emoji\",\n      style: {\n        padding: \"0.5rem\",\n        fontSize: \"1rem\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Meaning: \", meaning]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Emoji we know\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), Object.keys(emojiDictionary).map(function (emoji) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => emojiClickHandler(emoji),\n        style: {\n          padding: \"1rem\",\n          fontSize: \"2rem\",\n          cursor: \"pointer\"\n        },\n        children: emoji\n      }, emoji, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"D3EHYk/guY72sUVf/VpVxg+5wZI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","emojiDictionary","App","_s","meaning","setMeaning","emojiChangeHandler","event","target","value","undefined","emojiClickHandler","emoji","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","style","padding","fontSize","Object","keys","map","onClick","cursor","_c","$RefreshReg$"],"sources":["/Users/vishalmeghwal/my-first-react-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nconst emojiDictionary = {\n  \"üôÇ\": \"Acha\",\n  \"üòç\": \"wow\",\n  \"ü§≠\": \"hehehe\",\n  \"üòè\": \"Achaaaw\",\n};\n\nfunction App() {\n  const [meaning, setMeaning] = useState(\"\");\n\n  function emojiChangeHandler(event) {\n    var meaning = emojiDictionary[event.target.value];\n    if (meaning === undefined) {\n      meaning = \"We don't have this in the database\";\n    }\n    setMeaning(meaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Emoji interpreter</h1>\n      <input\n        onChange={emojiChangeHandler}\n        placeholder=\"Enter an emoji\"\n        style={{ padding: \"0.5rem\", fontSize: \"1rem\" }}\n      />\n      <h3>Meaning: {meaning}</h3>\n      <h3>Emoji we know</h3>\n      {Object.keys(emojiDictionary).map(function (emoji) {\n        return (\n          <span\n            onClick={() => emojiClickHandler(emoji)}\n            style={{ padding: \"1rem\", fontSize: \"2rem\", cursor: \"pointer\" }}\n            key={emoji}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,eAAe,GAAG;EACtB,IAAI,EAAE,MAAM;EACZ,IAAI,EAAE,KAAK;EACX,IAAI,EAAE,QAAQ;EACd,IAAI,EAAE;AACR,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASQ,kBAAkBA,CAACC,KAAK,EAAE;IACjC,IAAIH,OAAO,GAAGH,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjD,IAAIL,OAAO,KAAKM,SAAS,EAAE;MACzBN,OAAO,GAAG,oCAAoC;IAChD;IACAC,UAAU,CAACD,OAAO,CAAC;EACrB;EAEA,SAASO,iBAAiBA,CAACC,KAAK,EAAE;IAChC,IAAIR,OAAO,GAAGH,eAAe,CAACW,KAAK,CAAC;IACpCP,UAAU,CAACD,OAAO,CAAC;EACrB;EAEA,oBACEJ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBd,OAAA;MAAAc,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BlB,OAAA;MACEmB,QAAQ,EAAEb,kBAAmB;MAC7Bc,WAAW,EAAC,gBAAgB;MAC5BC,KAAK,EAAE;QAAEC,OAAO,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAO;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACFlB,OAAA;MAAAc,QAAA,GAAI,WAAS,EAACV,OAAO;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBM,MAAM,CAACC,IAAI,CAACxB,eAAe,CAAC,CAACyB,GAAG,CAAC,UAAUd,KAAK,EAAE;MACjD,oBACEZ,OAAA;QACE2B,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAACC,KAAK,CAAE;QACxCS,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,QAAQ,EAAE,MAAM;UAAEK,MAAM,EAAE;QAAU,CAAE;QAAAd,QAAA,EAG/DF;MAAK,GAFDA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGN,CAAC;IAEX,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACf,EAAA,CAvCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}